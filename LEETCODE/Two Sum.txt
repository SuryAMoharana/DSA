#BRUTEFORCE
class Solution {
    public int[] twoSum(int[] nums, int target) {
        
        int[] arr=new int[2];
        
        for(int i=0;i<nums.length;i++){
            for(int j=i+1;j<nums.length;j++){
                if(nums[i]+nums[j]==target){
                    arr[0]=i;
                    arr[1]=j;
                }
            }
        }
        return arr;       
    }
}

TimeComplexity O(n2)
SpaceComplexity O(n)



#USING HASHMAP
class Solution {
    public int[] twoSum(int[] nums, int target) {        
        int[] arr=new int[2];
        Map<Integer,Integer> map= new HashMap<Integer,Integer>();
        for(int i=0;i<nums.length;i++){
            if(map.containsKey(target-nums[i])){
                arr[1]=i;
                arr[0]=map.get(target-nums[i]);
            }
            map.put(nums[i],i);
        }
        return arr;
    }
}

TimeComplexity O(n)
SpaceComplexity O(n)